{"/mnt/c/Users/Cocos/Documents/DSI/prct07/src/ingredient.ts":{"path":"/mnt/c/Users/Cocos/Documents/DSI/prct07/src/ingredient.ts","statementMap":{"0":{"start":{"line":12,"column":0},"end":{"line":12,"column":62}},"1":{"start":{"line":13,"column":0},"end":{"line":13,"column":28}},"2":{"start":{"line":16,"column":8},"end":{"line":16,"column":25}},"3":{"start":{"line":17,"column":8},"end":{"line":17,"column":31}},"4":{"start":{"line":18,"column":8},"end":{"line":18,"column":25}},"5":{"start":{"line":19,"column":8},"end":{"line":19,"column":33}},"6":{"start":{"line":20,"column":8},"end":{"line":20,"column":25}},"7":{"start":{"line":21,"column":8},"end":{"line":21,"column":27}},"8":{"start":{"line":22,"column":8},"end":{"line":22,"column":33}},"9":{"start":{"line":25,"column":0},"end":{"line":25,"column":32}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":15,"column":4},"end":{"line":15,"column":5}},"loc":{"start":{"line":15,"column":70},"end":{"line":23,"column":5}},"line":15}},"branchMap":{},"s":{"0":1,"1":1,"2":14,"3":14,"4":14,"5":14,"6":14,"7":14,"8":14,"9":1},"f":{"0":14},"b":{},"inputSourceMap":{"version":3,"file":"/mnt/c/Users/Cocos/Documents/DSI/prct07/src/ingredient.ts","sources":["/mnt/c/Users/Cocos/Documents/DSI/prct07/src/ingredient.ts"],"names":[],"mappings":";AAAA;;;;;;;;;GASG;;;AAUH,MAAa,UAAU;IACrB,YAA4B,IAAY,EACZ,OAAe,EACf,IAAY,EACZ,QAAsB,EACtB,IAAY,EACZ,KAAc,EACd,QAAgB;QANhB,SAAI,GAAJ,IAAI,CAAQ;QACZ,YAAO,GAAP,OAAO,CAAQ;QACf,SAAI,GAAJ,IAAI,CAAQ;QACZ,aAAQ,GAAR,QAAQ,CAAc;QACtB,SAAI,GAAJ,IAAI,CAAQ;QACZ,UAAK,GAAL,KAAK,CAAS;QACd,aAAQ,GAAR,QAAQ,CAAQ;IAAG,CAAC;CACjD;AARD,gCAQC;AAAA,CAAC","sourcesContent":["/**\n * Class Ingredient\n * @param name Name of the Ingredient\n * @param country Country of the Ingredient\n * @param city City of the Ingredient\n * @param category Category of the Ingredient\n * @param kcal Calories of the ingredient\n * @param macro Macros of the Ingredient\n * @param price_kg Price of the Ingredient\n */\n\nexport type FoodCategory = \"Meat\" | \"Fish\" | \"Fruit\" | \"Vegetable\" | \n                           \"Dairy\" | \"Grain\" | \"Others\" | \"Legumes\";\n\nexport type Macro = {\n  group: \"Prot\" | \"Carb\" | \"Fat\" | \"Fiber\" ,\n  grams: number; \n}\n\nexport class Ingredient {\n  constructor(public readonly name: string, \n              public readonly country: string,\n              public readonly city: string,\n              public readonly category: FoodCategory,\n              public readonly kcal: number,\n              public readonly macro: Macro[],\n              public readonly price_kg: number) {}\n};\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"8e132470127db01241eff6ccf432c1b806aae949","contentHash":"7c2f4b1db3488e5be701b01e54c3bc7118f7e2244e6da2e853a4c0afa30606c8"},"/mnt/c/Users/Cocos/Documents/DSI/prct07/src/dish.ts":{"path":"/mnt/c/Users/Cocos/Documents/DSI/prct07/src/dish.ts","statementMap":{"0":{"start":{"line":13,"column":0},"end":{"line":13,"column":62}},"1":{"start":{"line":14,"column":0},"end":{"line":14,"column":22}},"2":{"start":{"line":17,"column":8},"end":{"line":17,"column":25}},"3":{"start":{"line":18,"column":8},"end":{"line":18,"column":33}},"4":{"start":{"line":19,"column":8},"end":{"line":19,"column":39}},"5":{"start":{"line":22,"column":18},"end":{"line":22,"column":19}},"6":{"start":{"line":23,"column":8},"end":{"line":25,"column":11}},"7":{"start":{"line":24,"column":12},"end":{"line":24,"column":58}},"8":{"start":{"line":26,"column":8},"end":{"line":26,"column":50}},"9":{"start":{"line":29,"column":18},"end":{"line":29,"column":19}},"10":{"start":{"line":30,"column":8},"end":{"line":32,"column":11}},"11":{"start":{"line":31,"column":12},"end":{"line":31,"column":63}},"12":{"start":{"line":33,"column":8},"end":{"line":33,"column":50}},"13":{"start":{"line":36,"column":21},"end":{"line":36,"column":23}},"14":{"start":{"line":37,"column":8},"end":{"line":39,"column":11}},"15":{"start":{"line":38,"column":12},"end":{"line":38,"column":66}},"16":{"start":{"line":40,"column":8},"end":{"line":40,"column":22}},"17":{"start":{"line":43,"column":22},"end":{"line":43,"column":49}},"18":{"start":{"line":44,"column":21},"end":{"line":44,"column":47}},"19":{"start":{"line":45,"column":22},"end":{"line":45,"column":49}},"20":{"start":{"line":46,"column":23},"end":{"line":46,"column":51}},"21":{"start":{"line":47,"column":8},"end":{"line":58,"column":11}},"22":{"start":{"line":48,"column":12},"end":{"line":57,"column":15}},"23":{"start":{"line":49,"column":16},"end":{"line":50,"column":96}},"24":{"start":{"line":50,"column":20},"end":{"line":50,"column":96}},"25":{"start":{"line":51,"column":16},"end":{"line":52,"column":95}},"26":{"start":{"line":52,"column":20},"end":{"line":52,"column":95}},"27":{"start":{"line":53,"column":16},"end":{"line":54,"column":96}},"28":{"start":{"line":54,"column":20},"end":{"line":54,"column":96}},"29":{"start":{"line":55,"column":16},"end":{"line":56,"column":97}},"30":{"start":{"line":56,"column":20},"end":{"line":56,"column":97}},"31":{"start":{"line":59,"column":23},"end":{"line":59,"column":59}},"32":{"start":{"line":60,"column":8},"end":{"line":60,"column":24}},"33":{"start":{"line":63,"column":24},"end":{"line":63,"column":26}},"34":{"start":{"line":64,"column":8},"end":{"line":66,"column":11}},"35":{"start":{"line":65,"column":12},"end":{"line":65,"column":48}},"36":{"start":{"line":67,"column":20},"end":{"line":67,"column":21}},"37":{"start":{"line":68,"column":20},"end":{"line":68,"column":21}},"38":{"start":{"line":69,"column":19},"end":{"line":69,"column":21}},"39":{"start":{"line":70,"column":8},"end":{"line":80,"column":9}},"40":{"start":{"line":70,"column":21},"end":{"line":70,"column":22}},"41":{"start":{"line":71,"column":12},"end":{"line":78,"column":13}},"42":{"start":{"line":71,"column":25},"end":{"line":71,"column":26}},"43":{"start":{"line":72,"column":16},"end":{"line":73,"column":28}},"44":{"start":{"line":73,"column":20},"end":{"line":73,"column":28}},"45":{"start":{"line":74,"column":16},"end":{"line":77,"column":17}},"46":{"start":{"line":75,"column":20},"end":{"line":75,"column":34}},"47":{"start":{"line":76,"column":20},"end":{"line":76,"column":40}},"48":{"start":{"line":79,"column":12},"end":{"line":79,"column":22}},"49":{"start":{"line":81,"column":8},"end":{"line":88,"column":9}},"50":{"start":{"line":82,"column":22},"end":{"line":82,"column":38}},"51":{"start":{"line":83,"column":12},"end":{"line":83,"column":77}},"52":{"start":{"line":83,"column":31},"end":{"line":83,"column":75}},"53":{"start":{"line":84,"column":12},"end":{"line":84,"column":38}},"54":{"start":{"line":87,"column":12},"end":{"line":87,"column":24}},"55":{"start":{"line":91,"column":0},"end":{"line":91,"column":20}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":16,"column":4},"end":{"line":16,"column":5}},"loc":{"start":{"line":16,"column":45},"end":{"line":20,"column":5}},"line":16},"1":{"name":"(anonymous_1)","decl":{"start":{"line":21,"column":4},"end":{"line":21,"column":5}},"loc":{"start":{"line":21,"column":24},"end":{"line":27,"column":5}},"line":21},"2":{"name":"(anonymous_2)","decl":{"start":{"line":23,"column":33},"end":{"line":23,"column":34}},"loc":{"start":{"line":23,"column":44},"end":{"line":25,"column":9}},"line":23},"3":{"name":"(anonymous_3)","decl":{"start":{"line":28,"column":4},"end":{"line":28,"column":5}},"loc":{"start":{"line":28,"column":21},"end":{"line":34,"column":5}},"line":28},"4":{"name":"(anonymous_4)","decl":{"start":{"line":30,"column":33},"end":{"line":30,"column":34}},"loc":{"start":{"line":30,"column":44},"end":{"line":32,"column":9}},"line":30},"5":{"name":"(anonymous_5)","decl":{"start":{"line":35,"column":4},"end":{"line":35,"column":5}},"loc":{"start":{"line":35,"column":26},"end":{"line":41,"column":5}},"line":35},"6":{"name":"(anonymous_6)","decl":{"start":{"line":37,"column":33},"end":{"line":37,"column":34}},"loc":{"start":{"line":37,"column":44},"end":{"line":39,"column":9}},"line":37},"7":{"name":"(anonymous_7)","decl":{"start":{"line":42,"column":4},"end":{"line":42,"column":5}},"loc":{"start":{"line":42,"column":19},"end":{"line":61,"column":5}},"line":42},"8":{"name":"(anonymous_8)","decl":{"start":{"line":47,"column":33},"end":{"line":47,"column":34}},"loc":{"start":{"line":47,"column":47},"end":{"line":58,"column":9}},"line":47},"9":{"name":"(anonymous_9)","decl":{"start":{"line":48,"column":40},"end":{"line":48,"column":41}},"loc":{"start":{"line":48,"column":49},"end":{"line":57,"column":13}},"line":48},"10":{"name":"(anonymous_10)","decl":{"start":{"line":62,"column":4},"end":{"line":62,"column":5}},"loc":{"start":{"line":62,"column":35},"end":{"line":89,"column":5}},"line":62},"11":{"name":"(anonymous_11)","decl":{"start":{"line":64,"column":33},"end":{"line":64,"column":34}},"loc":{"start":{"line":64,"column":44},"end":{"line":66,"column":9}},"line":64},"12":{"name":"(anonymous_12)","decl":{"start":{"line":83,"column":21},"end":{"line":83,"column":22}},"loc":{"start":{"line":83,"column":31},"end":{"line":83,"column":75}},"line":83}},"branchMap":{"0":{"loc":{"start":{"line":49,"column":16},"end":{"line":50,"column":96}},"type":"if","locations":[{"start":{"line":49,"column":16},"end":{"line":50,"column":96}},{"start":{"line":49,"column":16},"end":{"line":50,"column":96}}],"line":49},"1":{"loc":{"start":{"line":51,"column":16},"end":{"line":52,"column":95}},"type":"if","locations":[{"start":{"line":51,"column":16},"end":{"line":52,"column":95}},{"start":{"line":51,"column":16},"end":{"line":52,"column":95}}],"line":51},"2":{"loc":{"start":{"line":53,"column":16},"end":{"line":54,"column":96}},"type":"if","locations":[{"start":{"line":53,"column":16},"end":{"line":54,"column":96}},{"start":{"line":53,"column":16},"end":{"line":54,"column":96}}],"line":53},"3":{"loc":{"start":{"line":55,"column":16},"end":{"line":56,"column":97}},"type":"if","locations":[{"start":{"line":55,"column":16},"end":{"line":56,"column":97}},{"start":{"line":55,"column":16},"end":{"line":56,"column":97}}],"line":55},"4":{"loc":{"start":{"line":72,"column":16},"end":{"line":73,"column":28}},"type":"if","locations":[{"start":{"line":72,"column":16},"end":{"line":73,"column":28}},{"start":{"line":72,"column":16},"end":{"line":73,"column":28}}],"line":72},"5":{"loc":{"start":{"line":74,"column":16},"end":{"line":77,"column":17}},"type":"if","locations":[{"start":{"line":74,"column":16},"end":{"line":77,"column":17}},{"start":{"line":74,"column":16},"end":{"line":77,"column":17}}],"line":74},"6":{"loc":{"start":{"line":81,"column":8},"end":{"line":88,"column":9}},"type":"if","locations":[{"start":{"line":81,"column":8},"end":{"line":88,"column":9}},{"start":{"line":81,"column":8},"end":{"line":88,"column":9}}],"line":81},"7":{"loc":{"start":{"line":83,"column":31},"end":{"line":83,"column":75}},"type":"cond-expr","locations":[{"start":{"line":83,"column":47},"end":{"line":83,"column":48}},{"start":{"line":83,"column":52},"end":{"line":83,"column":74}}],"line":83},"8":{"loc":{"start":{"line":83,"column":52},"end":{"line":83,"column":74}},"type":"cond-expr","locations":[{"start":{"line":83,"column":68},"end":{"line":83,"column":70}},{"start":{"line":83,"column":73},"end":{"line":83,"column":74}}],"line":83}},"s":{"0":1,"1":1,"2":3,"3":3,"4":3,"5":3,"6":3,"7":15,"8":3,"9":3,"10":3,"11":15,"12":3,"13":3,"14":3,"15":15,"16":3,"17":3,"18":3,"19":3,"20":3,"21":3,"22":15,"23":45,"24":15,"25":45,"26":15,"27":45,"28":15,"29":45,"30":0,"31":3,"32":3,"33":1,"34":1,"35":5,"36":1,"37":1,"38":1,"39":1,"40":1,"41":5,"42":5,"43":15,"44":6,"45":15,"46":1,"47":1,"48":5,"49":1,"50":0,"51":0,"52":0,"53":0,"54":1,"55":1},"f":{"0":3,"1":3,"2":15,"3":3,"4":15,"5":3,"6":15,"7":3,"8":15,"9":45,"10":1,"11":5,"12":0},"b":{"0":[15,30],"1":[15,30],"2":[15,30],"3":[0,45],"4":[6,9],"5":[1,14],"6":[0,1],"7":[0,0],"8":[0,0]},"inputSourceMap":{"version":3,"file":"/mnt/c/Users/Cocos/Documents/DSI/prct07/src/dish.ts","sources":["/mnt/c/Users/Cocos/Documents/DSI/prct07/src/dish.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * Class Dish\n * @param name Name of the dish\n * @param category Category of the dish\n * @param ingredeints Ingredients in the dish\n * @method showIngredients() Returns ingredients of the dish\n * @method totalDishCalories() Calculates total calories of the dish\n * @method totalDishPrice() Calculates total price of the dish\n * @method getDishMacro() Returns the total amount of proteins, carbs, fats and fiber in the dish\n * @method dominantIngredientType() Calcualtes the most dominant type of ingredient of the dish \n */\n\n\nimport {Ingredient, FoodCategory, Macro} from './ingredient'\n\nexport type DishCategory = \"Starter\" | \"First\" | \"Main\" | \"Dessert\";\n\nexport class Dish {\n  constructor(readonly name: string,\n              readonly category: DishCategory,\n              public readonly ingredients: [Ingredient, number][]) {}\n\n  totalDishCalories(): number {\n    let sum: number = 0;\n    this.ingredients.forEach(element => {\n      sum += (element[0].kcal * (element[1]/100));\n    })\n    return sum = parseFloat((sum).toFixed(0))\n  }\n\n   totalDishPrice(): number{\n    let sum: number = 0;\n    this.ingredients.forEach(element => {\n      sum += (element[0].price_kg * (element[1]/1000));\n    })\n    return sum = parseFloat((sum).toFixed(2))\n  }\n\n  showDishIngredients(): string {\n    let result: string = \"\";\n    this.ingredients.forEach(element => {\n      result += element[0].name + \" (\" + element[1] + \"g) \";\n    })\n    return result;\n  }\n\n  getDishMacro(): Macro[] {\n    let sumProt:  Macro = {group: \"Prot\", grams: 0};\n    let sumFat:  Macro = {group: \"Fat\", grams: 0};\n    let sumCarb:   Macro = {group: \"Carb\" , grams: 0};\n    let sumFiber: Macro = {group: \"Fiber\", grams: 0};\n    this.ingredients.forEach(ingredient => {\n      ingredient[0].macro.forEach(macro => {\n        if (macro.group === \"Prot\") \n          sumProt.grams += parseFloat((macro.grams * ingredient[1]/100).toFixed(0));\n        if (macro.group === \"Fat\") \n          sumFat.grams += parseFloat((macro.grams * ingredient[1]/100).toFixed(0));\n        if (macro.group === \"Carb\") \n          sumCarb.grams += parseFloat((macro.grams * ingredient[1]/100).toFixed(0));\n        if (macro.group === \"Fiber\") \n          sumFiber.grams += parseFloat((macro.grams * ingredient[1]/100).toFixed(0));\n      });\n    });\n    let sumMacro: Macro[] = [sumProt, sumFat, sumCarb, sumFiber];\n    return sumMacro;\n  }\n  \n  dominantIngredientTypeOnDish(): string {\n    let auxVector: FoodCategory[] = [];\n    this.ingredients.forEach(element => {\n      auxVector.push(element[0].category)\n    })\n\n    let index: number = 0;\n    let count: number = 1;\n    let item: string = \"\";\n\n    for (let i = 0; i < auxVector.length; i++) {\n      for (let j = i; j < auxVector.length; j++) {\n        if (auxVector[i] === auxVector[j]) index++;\n        if (count < index) {\n          count = index;\n          item = auxVector[i];\n        }\n      }\n      index = 0;\n    }\n    if (count === 1) {\n      let tmp: [Ingredient, number][] = this.ingredients;\n      tmp.sort((a,b) => (a[1] < b[1]) ? 1 : ((b[1] < a[1]) ? -1 : 0))\n      return tmp[0][0].category\n    }\n    else {\n      return item;\n    }\n  }\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"cbdd84506da100cedcdb5880f909b263ff878ae8","contentHash":"724c7ae8c065d5b23a83838b92f7ebdc9c84624c70e988205047449ad7fd51b8"},"/mnt/c/Users/Cocos/Documents/DSI/prct07/src/menu.ts":{"path":"/mnt/c/Users/Cocos/Documents/DSI/prct07/src/menu.ts","statementMap":{"0":{"start":{"line":14,"column":0},"end":{"line":14,"column":62}},"1":{"start":{"line":15,"column":0},"end":{"line":15,"column":22}},"2":{"start":{"line":18,"column":8},"end":{"line":18,"column":25}},"3":{"start":{"line":19,"column":8},"end":{"line":19,"column":29}},"4":{"start":{"line":20,"column":8},"end":{"line":22,"column":9}},"5":{"start":{"line":21,"column":12},"end":{"line":21,"column":72}},"6":{"start":{"line":25,"column":20},"end":{"line":25,"column":48}},"7":{"start":{"line":26,"column":19},"end":{"line":26,"column":20}},"8":{"start":{"line":27,"column":8},"end":{"line":36,"column":11}},"9":{"start":{"line":28,"column":12},"end":{"line":29,"column":32}},"10":{"start":{"line":29,"column":16},"end":{"line":29,"column":32}},"11":{"start":{"line":30,"column":12},"end":{"line":31,"column":32}},"12":{"start":{"line":31,"column":16},"end":{"line":31,"column":32}},"13":{"start":{"line":32,"column":12},"end":{"line":33,"column":32}},"14":{"start":{"line":33,"column":16},"end":{"line":33,"column":32}},"15":{"start":{"line":34,"column":12},"end":{"line":35,"column":32}},"16":{"start":{"line":35,"column":16},"end":{"line":35,"column":32}},"17":{"start":{"line":37,"column":8},"end":{"line":40,"column":11}},"18":{"start":{"line":38,"column":12},"end":{"line":39,"column":23}},"19":{"start":{"line":39,"column":16},"end":{"line":39,"column":23}},"20":{"start":{"line":41,"column":8},"end":{"line":42,"column":24}},"21":{"start":{"line":42,"column":12},"end":{"line":42,"column":24}},"22":{"start":{"line":43,"column":8},"end":{"line":43,"column":21}},"23":{"start":{"line":46,"column":8},"end":{"line":46,"column":34}},"24":{"start":{"line":49,"column":8},"end":{"line":55,"column":11}},"25":{"start":{"line":50,"column":12},"end":{"line":54,"column":13}},"26":{"start":{"line":51,"column":30},"end":{"line":51,"column":55}},"27":{"start":{"line":52,"column":16},"end":{"line":53,"column":49}},"28":{"start":{"line":53,"column":20},"end":{"line":53,"column":49}},"29":{"start":{"line":58,"column":18},"end":{"line":58,"column":19}},"30":{"start":{"line":59,"column":8},"end":{"line":61,"column":11}},"31":{"start":{"line":60,"column":12},"end":{"line":60,"column":41}},"32":{"start":{"line":62,"column":8},"end":{"line":62,"column":42}},"33":{"start":{"line":65,"column":18},"end":{"line":65,"column":19}},"34":{"start":{"line":66,"column":8},"end":{"line":68,"column":11}},"35":{"start":{"line":67,"column":12},"end":{"line":67,"column":44}},"36":{"start":{"line":69,"column":8},"end":{"line":69,"column":19}},"37":{"start":{"line":72,"column":30},"end":{"line":72,"column":32}},"38":{"start":{"line":73,"column":8},"end":{"line":75,"column":11}},"39":{"start":{"line":74,"column":12},"end":{"line":74,"column":82}},"40":{"start":{"line":76,"column":8},"end":{"line":76,"column":31}},"41":{"start":{"line":79,"column":22},"end":{"line":79,"column":49}},"42":{"start":{"line":80,"column":21},"end":{"line":80,"column":47}},"43":{"start":{"line":81,"column":22},"end":{"line":81,"column":49}},"44":{"start":{"line":82,"column":23},"end":{"line":82,"column":51}},"45":{"start":{"line":83,"column":8},"end":{"line":94,"column":11}},"46":{"start":{"line":84,"column":12},"end":{"line":93,"column":15}},"47":{"start":{"line":85,"column":16},"end":{"line":86,"column":49}},"48":{"start":{"line":86,"column":20},"end":{"line":86,"column":49}},"49":{"start":{"line":87,"column":16},"end":{"line":88,"column":48}},"50":{"start":{"line":88,"column":20},"end":{"line":88,"column":48}},"51":{"start":{"line":89,"column":16},"end":{"line":90,"column":49}},"52":{"start":{"line":90,"column":20},"end":{"line":90,"column":49}},"53":{"start":{"line":91,"column":16},"end":{"line":92,"column":50}},"54":{"start":{"line":92,"column":20},"end":{"line":92,"column":50}},"55":{"start":{"line":95,"column":23},"end":{"line":95,"column":59}},"56":{"start":{"line":96,"column":8},"end":{"line":96,"column":24}},"57":{"start":{"line":99,"column":20},"end":{"line":99,"column":22}},"58":{"start":{"line":100,"column":8},"end":{"line":106,"column":11}},"59":{"start":{"line":101,"column":27},"end":{"line":101,"column":45}},"60":{"start":{"line":102,"column":12},"end":{"line":104,"column":15}},"61":{"start":{"line":103,"column":16},"end":{"line":103,"column":50}},"62":{"start":{"line":105,"column":12},"end":{"line":105,"column":33}},"63":{"start":{"line":107,"column":8},"end":{"line":107,"column":21}},"64":{"start":{"line":110,"column":8},"end":{"line":110,"column":25}},"65":{"start":{"line":113,"column":0},"end":{"line":113,"column":20}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":17,"column":4},"end":{"line":17,"column":5}},"loc":{"start":{"line":17,"column":30},"end":{"line":23,"column":5}},"line":17},"1":{"name":"(anonymous_1)","decl":{"start":{"line":24,"column":4},"end":{"line":24,"column":5}},"loc":{"start":{"line":24,"column":22},"end":{"line":44,"column":5}},"line":24},"2":{"name":"(anonymous_2)","decl":{"start":{"line":27,"column":28},"end":{"line":27,"column":29}},"loc":{"start":{"line":27,"column":36},"end":{"line":36,"column":9}},"line":27},"3":{"name":"(anonymous_3)","decl":{"start":{"line":37,"column":22},"end":{"line":37,"column":23}},"loc":{"start":{"line":37,"column":30},"end":{"line":40,"column":9}},"line":37},"4":{"name":"(anonymous_4)","decl":{"start":{"line":45,"column":4},"end":{"line":45,"column":5}},"loc":{"start":{"line":45,"column":21},"end":{"line":47,"column":5}},"line":45},"5":{"name":"(anonymous_5)","decl":{"start":{"line":48,"column":4},"end":{"line":48,"column":5}},"loc":{"start":{"line":48,"column":27},"end":{"line":56,"column":5}},"line":48},"6":{"name":"(anonymous_6)","decl":{"start":{"line":49,"column":28},"end":{"line":49,"column":29}},"loc":{"start":{"line":49,"column":36},"end":{"line":55,"column":9}},"line":49},"7":{"name":"(anonymous_7)","decl":{"start":{"line":57,"column":4},"end":{"line":57,"column":5}},"loc":{"start":{"line":57,"column":21},"end":{"line":63,"column":5}},"line":57},"8":{"name":"(anonymous_8)","decl":{"start":{"line":59,"column":28},"end":{"line":59,"column":29}},"loc":{"start":{"line":59,"column":36},"end":{"line":61,"column":9}},"line":59},"9":{"name":"(anonymous_9)","decl":{"start":{"line":64,"column":4},"end":{"line":64,"column":5}},"loc":{"start":{"line":64,"column":24},"end":{"line":70,"column":5}},"line":64},"10":{"name":"(anonymous_10)","decl":{"start":{"line":66,"column":28},"end":{"line":66,"column":29}},"loc":{"start":{"line":66,"column":36},"end":{"line":68,"column":9}},"line":66},"11":{"name":"(anonymous_11)","decl":{"start":{"line":71,"column":4},"end":{"line":71,"column":5}},"loc":{"start":{"line":71,"column":21},"end":{"line":77,"column":5}},"line":71},"12":{"name":"(anonymous_12)","decl":{"start":{"line":73,"column":28},"end":{"line":73,"column":29}},"loc":{"start":{"line":73,"column":36},"end":{"line":75,"column":9}},"line":73},"13":{"name":"(anonymous_13)","decl":{"start":{"line":78,"column":4},"end":{"line":78,"column":5}},"loc":{"start":{"line":78,"column":19},"end":{"line":97,"column":5}},"line":78},"14":{"name":"(anonymous_14)","decl":{"start":{"line":83,"column":28},"end":{"line":83,"column":29}},"loc":{"start":{"line":83,"column":36},"end":{"line":94,"column":9}},"line":83},"15":{"name":"(anonymous_15)","decl":{"start":{"line":84,"column":40},"end":{"line":84,"column":41}},"loc":{"start":{"line":84,"column":49},"end":{"line":93,"column":13}},"line":84},"16":{"name":"(anonymous_16)","decl":{"start":{"line":98,"column":4},"end":{"line":98,"column":5}},"loc":{"start":{"line":98,"column":27},"end":{"line":108,"column":5}},"line":98},"17":{"name":"(anonymous_17)","decl":{"start":{"line":100,"column":28},"end":{"line":100,"column":29}},"loc":{"start":{"line":100,"column":36},"end":{"line":106,"column":9}},"line":100},"18":{"name":"(anonymous_18)","decl":{"start":{"line":102,"column":37},"end":{"line":102,"column":38}},"loc":{"start":{"line":102,"column":44},"end":{"line":104,"column":13}},"line":102},"19":{"name":"(anonymous_19)","decl":{"start":{"line":109,"column":4},"end":{"line":109,"column":5}},"loc":{"start":{"line":109,"column":15},"end":{"line":111,"column":5}},"line":109}},"branchMap":{"0":{"loc":{"start":{"line":20,"column":8},"end":{"line":22,"column":9}},"type":"if","locations":[{"start":{"line":20,"column":8},"end":{"line":22,"column":9}},{"start":{"line":20,"column":8},"end":{"line":22,"column":9}}],"line":20},"1":{"loc":{"start":{"line":28,"column":12},"end":{"line":29,"column":32}},"type":"if","locations":[{"start":{"line":28,"column":12},"end":{"line":29,"column":32}},{"start":{"line":28,"column":12},"end":{"line":29,"column":32}}],"line":28},"2":{"loc":{"start":{"line":30,"column":12},"end":{"line":31,"column":32}},"type":"if","locations":[{"start":{"line":30,"column":12},"end":{"line":31,"column":32}},{"start":{"line":30,"column":12},"end":{"line":31,"column":32}}],"line":30},"3":{"loc":{"start":{"line":32,"column":12},"end":{"line":33,"column":32}},"type":"if","locations":[{"start":{"line":32,"column":12},"end":{"line":33,"column":32}},{"start":{"line":32,"column":12},"end":{"line":33,"column":32}}],"line":32},"4":{"loc":{"start":{"line":34,"column":12},"end":{"line":35,"column":32}},"type":"if","locations":[{"start":{"line":34,"column":12},"end":{"line":35,"column":32}},{"start":{"line":34,"column":12},"end":{"line":35,"column":32}}],"line":34},"5":{"loc":{"start":{"line":38,"column":12},"end":{"line":39,"column":23}},"type":"if","locations":[{"start":{"line":38,"column":12},"end":{"line":39,"column":23}},{"start":{"line":38,"column":12},"end":{"line":39,"column":23}}],"line":38},"6":{"loc":{"start":{"line":41,"column":8},"end":{"line":42,"column":24}},"type":"if","locations":[{"start":{"line":41,"column":8},"end":{"line":42,"column":24}},{"start":{"line":41,"column":8},"end":{"line":42,"column":24}}],"line":41},"7":{"loc":{"start":{"line":50,"column":12},"end":{"line":54,"column":13}},"type":"if","locations":[{"start":{"line":50,"column":12},"end":{"line":54,"column":13}},{"start":{"line":50,"column":12},"end":{"line":54,"column":13}}],"line":50},"8":{"loc":{"start":{"line":52,"column":16},"end":{"line":53,"column":49}},"type":"if","locations":[{"start":{"line":52,"column":16},"end":{"line":53,"column":49}},{"start":{"line":52,"column":16},"end":{"line":53,"column":49}}],"line":52},"9":{"loc":{"start":{"line":85,"column":16},"end":{"line":86,"column":49}},"type":"if","locations":[{"start":{"line":85,"column":16},"end":{"line":86,"column":49}},{"start":{"line":85,"column":16},"end":{"line":86,"column":49}}],"line":85},"10":{"loc":{"start":{"line":87,"column":16},"end":{"line":88,"column":48}},"type":"if","locations":[{"start":{"line":87,"column":16},"end":{"line":88,"column":48}},{"start":{"line":87,"column":16},"end":{"line":88,"column":48}}],"line":87},"11":{"loc":{"start":{"line":89,"column":16},"end":{"line":90,"column":49}},"type":"if","locations":[{"start":{"line":89,"column":16},"end":{"line":90,"column":49}},{"start":{"line":89,"column":16},"end":{"line":90,"column":49}}],"line":89},"12":{"loc":{"start":{"line":91,"column":16},"end":{"line":92,"column":50}},"type":"if","locations":[{"start":{"line":91,"column":16},"end":{"line":92,"column":50}},{"start":{"line":91,"column":16},"end":{"line":92,"column":50}}],"line":91}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":2,"7":2,"8":2,"9":4,"10":2,"11":4,"12":0,"13":4,"14":2,"15":4,"16":0,"17":2,"18":8,"19":4,"20":2,"21":0,"22":2,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":1,"30":1,"31":2,"32":1,"33":1,"34":1,"35":2,"36":1,"37":1,"38":1,"39":2,"40":1,"41":1,"42":1,"43":1,"44":1,"45":1,"46":2,"47":8,"48":2,"49":8,"50":2,"51":8,"52":2,"53":8,"54":2,"55":1,"56":1,"57":1,"58":1,"59":2,"60":2,"61":10,"62":2,"63":1,"64":1,"65":1},"f":{"0":1,"1":2,"2":4,"3":8,"4":0,"5":0,"6":0,"7":1,"8":2,"9":1,"10":2,"11":1,"12":2,"13":1,"14":2,"15":8,"16":1,"17":2,"18":10,"19":1},"b":{"0":[1,0],"1":[2,2],"2":[0,4],"3":[2,2],"4":[0,4],"5":[4,4],"6":[0,2],"7":[0,0],"8":[0,0],"9":[2,6],"10":[2,6],"11":[2,6],"12":[2,6]},"inputSourceMap":{"version":3,"file":"/mnt/c/Users/Cocos/Documents/DSI/prct07/src/menu.ts","sources":["/mnt/c/Users/Cocos/Documents/DSI/prct07/src/menu.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * Class Menu\n * @param dishes Array of dishes in the menu\n * @method categoryChecker() Checks if at least there are 3 different dish categories\n * @method addDish() Pushes a new dish into the menu\n * @method removeDish() Eliminates a dish from the menu by his name\n * @method totalMenuPrice() Calculates the total menu price\n * @method totalMenuCalories() Calculates the total menu calories\n * @method showMenuDishes() Returns the menu dish and its ingredients\n * @method getMenuMacro() Returns the total amount of proteins, carbs, fats and fiber in the menu\n * @method showGroupIngredients() Returns the group of ingredients in order of appereance\n */\n\nimport {Dish, DishCategory} from './dish';\nimport {Macro} from './ingredient'\n\nexport class Menu {\n  constructor(private name: string, private dishes: Dish[]) {\n    if (!this.categoryChecker()) {\n      console.error(\"No contiene los tipos de plato suficientes\");\n    }\n  }\n\n  categoryChecker(): boolean {\n    let types: boolean[] = [false, false, false, false];\n    let cont = 0\n    this.dishes.forEach(dish => {\n      if (dish.category === \"Starter\") types[0] = true;\n      if (dish.category === \"First\")   types[1] = true;\n      if (dish.category === \"Main\")    types[2] = true;\n      if (dish.category === \"Dessert\") types[3] = true;\n    })\n    types.forEach(elem => {\n      if (elem) cont++;\n    })\n    if (cont >= 3) return true;\n    return false;\n  }\n\n  addDish(newDish: Dish): void {\n    this.dishes.push(newDish);\n  }\n\n  removeDish(removeDish: Dish): void {\n    this.dishes.forEach(dish => {\n      if (removeDish.name === dish.name) {\n        const index = this.dishes.indexOf(dish)\n        if (index > -1) this.dishes.splice(index, 1);\n      }\n    });\n  }\n\n  totalMenuPrice(): number {\n    let sum: number = 0;\n    this.dishes.forEach(dish => {\n      sum += dish.totalDishPrice();\n    })\n    return parseFloat(sum.toFixed(2));\n  }\n\n  totalMenuCalories(): number {\n    let sum: number = 0;\n    this.dishes.forEach(dish => {\n      sum += dish.totalDishCalories();\n    })\n    return sum;\n  }\n\n  showMenuDishes(): string[] {\n    let dishIngredients: string[] = [];\n    this.dishes.forEach(dish => {\n      dishIngredients.push(dish.name + \" -> \" + dish.showDishIngredients());\n    })\n    return dishIngredients;\n  }\n\n  getMenuMacro(): Macro[] {\n    let sumProt:  Macro = {group: \"Prot\", grams: 0};\n    let sumFat:   Macro = {group: \"Fat\" , grams: 0};\n    let sumCarb:  Macro = {group: \"Carb\", grams: 0};\n    let sumFiber: Macro = {group: \"Fiber\", grams: 0};\n    this.dishes.forEach(dish => {\n      dish.getDishMacro().forEach(macro => {\n        if (macro.group === \"Prot\") sumProt.grams += macro.grams;\n        if (macro.group === \"Fat\") sumFat.grams += macro.grams;\n        if (macro.group === \"Carb\") sumCarb.grams += macro.grams;\n        if (macro.group === \"Fiber\") sumFiber.grams += macro.grams;\n      });\n    });\n    let sumMacro: Macro[] = [sumProt, sumFat, sumCarb, sumFiber];\n    return sumMacro;\n  }\n\n  showGroupIngredients(): string[] {\n    let group: string[] = [];\n    this.dishes.forEach(dish => {\n      let dishName: string = dish.name + \" -> \";\n      dish.ingredients.forEach(ing => {\n        dishName += ing[0].category + \" \";\n      })\n      group.push(dishName);\n    })\n    return group;\n  }\n\n  get_name(): string{\n    return this.name;\n  }\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"3bcfd5eb9b50e56f327b6c35a0436da27ab7e8e5","contentHash":"1cdf7aa44973196a8b0f33a593a76e4fe054b0d669ef98a6e8486d3a5fd70323"}}